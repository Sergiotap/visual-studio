"use strict";var D=Object.defineProperty;var Ut=Object.getOwnPropertyDescriptor;var kt=Object.getOwnPropertyNames;var Et=Object.prototype.hasOwnProperty;var Lt=(e,t)=>{for(var i in t)D(e,i,{get:t[i],enumerable:!0})},At=(e,t,i,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of kt(t))!Et.call(e,o)&&o!==i&&D(e,o,{get:()=>t[o],enumerable:!(r=Ut(t,o))||r.enumerable});return e};var Ft=e=>At(D({},"__esModule",{value:!0}),e);var te={};Lt(te,{activate:()=>Qt});module.exports=Ft(te);var Ct=require("vscode");var m=require("vscode");var p=e=>(e==null?void 0:e.document.uri.scheme)==="file";var H=require("vscode"),a=e=>H.workspace.getConfiguration("gitblame").get(e);var V=require("vscode"),Mt=1e3,j=60*Mt,_=60*j,K=24*_,q=365.25*K,Dt=q/12,St=[["year",q],["month",Dt],["day",K],["hour",_],["minute",j]],S=(e,t)=>{let i=e.valueOf()-t.valueOf();for(let[r,o]of St)if(i>o)return new Intl.RelativeTimeFormat(V.env.language).format(-1*Math.round(i/o),r);return"right now"};var w=({author:e,committer:t,hash:i,summary:r})=>{let o=new Date,n=({date:M})=>M.toISOString().slice(0,10),d=S(o,e.date),x=S(o,t.date),g=(M,Pt)=>(It="")=>M.substr(0,parseInt(It||Pt,10));return{"author.mail":e.mail,"author.name":e.name,"author.timestamp":e.timestamp,"author.tz":e.tz,"author.date":n(e),"committer.mail":t.mail,"committer.name":t.name,"committer.timestamp":t.timestamp,"committer.tz":t.tz,"committer.date":n(t),"commit.hash":g(i,"40"),"commit.hash_short":g(i,"7"),"commit.summary":g(r,"65536"),"time.ago":d,"time.c_ago":x}};var Ot=(e,t,i)=>r=>{let o=e.indexOf(r,t);return o===-1||o>i?i:o},Rt=(e,t)=>(i,r)=>r===i||t===i?"":e.substring(i+1,r);function Bt(e,t,i){let r=t.indexOf("}",i),o=Ot(t,i,r),n=Rt(t,r),d=o(","),x=o("|"),g=t.substring(i,Math.min(d,x));return[e[g]??g,n(x,r),n(d,x)]}function*$t(e,t){let i=0,r=0,o=0;for(let n=0;n<e.length;n++)if(o===0&&e[n]==="$")o=2;else if(o===2&&e[n]==="{")o=1,r=n-1,yield[e.slice(i,r)],i=r;else if(o===2)o=0;else if(o===1){o=0;let d=e.indexOf("}",n);if(d===-1)break;yield Bt(t,e,n),i=d+1}yield[e.slice(i)]}var Y=(e,t="")=>t==="u"?e.toUpperCase():t==="l"?e.toLowerCase():t?`${e}|${t}`:e,Wt=e=>e.replace(/\u202e/g,""),h=(e,t)=>{let i="";for(let[r,o,n]of $t(e,t))typeof r=="string"?i+=Y(r,o):i+=Y(r(n),o);return Wt(i)},X=e=>h(a("statusBarMessageFormat"),w(e)),Z=e=>h(a("inlineMessageFormat"),w(e));var c=require("vscode");function u(e){return/^0{40}$/.test(e.hash)}var J=require("vscode"),l=()=>J.window.activeTextEditor,O="N:-1",R=({document:e,selection:t})=>e.uri.scheme!=="file"?O:`${e.fileName}:${t.active.line}`;var T=class{constructor(){this.decorationType=c.window.createTextEditorDecorationType({}),this.statusBar=this.createStatusBarItem(),c.workspace.onDidChangeConfiguration(t=>{t.affectsConfiguration("gitblame")&&this.createStatusBarItem()})}createStatusBarItem(){this.statusBar&&this.statusBar.dispose();let t=c.window.createStatusBarItem(c.StatusBarAlignment.Right,a("statusBarPositionPriority"));return t.show(),t}createLineDecoration(t,i){var n;if(!a("inlineMessageEnabled"))return;let r=a("inlineMessageMargin"),o=new c.Position(i.selection.active.line,Number.MAX_SAFE_INTEGER);this.removeLineDecoration(),(n=i.setDecorations)==null||n.call(i,this.decorationType,[{renderOptions:{after:{contentText:t,margin:`0 0 0 ${r}rem`,color:new c.ThemeColor("editorCodeLens.foreground")}},range:new c.Range(o,o)}])}removeLineDecoration(){var i;let t=l();(i=t==null?void 0:t.setDecorations)==null||i.call(t,this.decorationType,[])}set(t,i){t?u(t)?(this.text(a("statusBarMessageNoCommit"),!1),i&&this.createLineDecoration(a("inlineMessageNoCommit"),i)):(this.text(X(t),!0),i&&this.createLineDecoration(Z(t),i)):this.clear()}clear(){this.text("",!1),this.removeLineDecoration()}activity(){this.text("$(sync~spin) Waiting for git blame response",!1)}dispose(){var t;(t=this.statusBar)==null||t.dispose(),this.decorationType.dispose()}command(){return a("statusBarMessageClickAction")==="Open tool URL"?"gitblame.online":"gitblame.quickInfo"}text(t,i){this.statusBar.text="$(git-commit) "+t.trimEnd(),this.statusBar.tooltip=`git blame${i?"":" - No info about the current line"}`,this.statusBar.command=i?this.command():void 0}};var I=require("fs");var b=(e,t=" ")=>{let i=e.indexOf(t[0]);return i===-1?[e,""]:[e.substr(0,i),e.substr(i+1).trim()]};var Gt=e=>({author:{mail:"",name:"",timestamp:"",date:new Date,tz:""},committer:{mail:"",name:"",timestamp:"",date:new Date,tz:""},hash:e,summary:""}),Nt=e=>({commit:e,filename:""});function*zt(e){let t=0;for(;t<e.length;){let i=e.indexOf(`
`,t);yield b(e.toString("utf8",t,i)),t=i+1}}var Ht=(e,t,i)=>{t==="time"?(e.timestamp=i,e.date=new Date(parseInt(i,10)*1e3)):t==="tz"||t==="mail"?e[t]=i:t===""&&(e.name=i)},Vt=(e,t,i)=>{let[r,o]=b(e,"-");(r==="author"||r==="committer")&&Ht(i[r],o,t)},tt=e=>/^\w{40}$/.test(e),jt=(e,t)=>tt(e)&&/^\d+ \d+ \d+$/.test(t),_t=(e,t,i)=>{e==="summary"?i.summary=t:tt(e)?i.hash=e:Vt(e,t,i)};function*Kt(e){let[t,i,r]=e.split(" ").map(Number);for(let o=0;o<r;o++)yield{source:t+o,result:i+o}}function*Q(e,t,i){if(!(e===void 0||t===void 0)){i.set(e.commit.hash,e.commit);for(let r of t)yield{...e,line:r}}}function*qt(e,t){let i,r;for(let[o,n]of zt(e))jt(o,n)&&(i=Nt(t.get(o)??Gt(o)),r=Kt(n)),i&&(o==="filename"?(i.filename=n,yield*Q(i,r,t)):_t(o,n,i.commit));yield*Q(i,r,t)}async function*et(e){let t=new Map;for await(let i of e??[])yield*qt(i,t)}async function it(e){for await(let t of e??[])if(typeof t=="string")throw new Error(t)}var rt=require("vscode"),s=class{static getInstance(){return s.instance=s.instance??new s,s.instance}constructor(){this.out=rt.window.createOutputChannel("Git Blame")}static error(t){t instanceof Error&&s.write("error",t.toString())}static write(t,i){s.getInstance().out.appendLine(`[ ${new Date().toTimeString().substr(0,8)} | ${t} ] ${i.trim()}`)}dispose(){s.instance=void 0,this.out.dispose()}};var st=require("child_process"),$=require("path"),at=require("vscode");var ot=require("child_process");var nt=async(e,t,i={})=>{s.write("command",`${e} ${t.join(" ")}`);let r;try{r=(0,ot.execFile)(e,t,{...i,encoding:"utf8"})}catch(n){return s.error(n),""}let o="";for await(let n of(r==null?void 0:r.stdout)??[])o+=n;return o.trim()};var B=()=>{let e=at.extensions.getExtension("vscode.git");return e!=null&&e.exports.enabled?e.exports.getAPI(1).git.path:"git"},y=(e,...t)=>nt(B(),t,{cwd:(0,$.dirname)(e)}),mt=async e=>{let t=l();return p(t)?y(t.document.fileName,"ls-remote","--get-url",e):""},ct=async e=>{let t=l();if(!p(t))return"";let{fileName:i}=t.document,r=await y(i,"symbolic-ref","-q","--short","HEAD"),o=await y(i,"config",`branch.${r}.remote`);return y(i,"config",`remote.${o||e}.url`)},W=async e=>y(e,"rev-parse","--git-dir"),lt=async e=>!!await W(e),pt=e=>{let t=["blame","-C","--incremental","--",e];return a("ignoreWhitespace")&&t.splice(1,0,"-w"),s.write("command",`${B()} ${t.join(" ")}`),(0,st.spawn)(B(),t,{cwd:(0,$.dirname)(e)})},dt=async()=>{let e=l();if(!p(e))return"";let{fileName:t}=e.document;return y(t,"ls-files","--full-name","--",t)};var ut=require("fs/promises"),ft=require("path"),C=class{constructor(t){this.killed=!1;this.store=this.blame(t)}dispose(){var t;(t=this.process)==null||t.kill(),this.killed=!0}async*run(t){var i,r;this.process=pt(t),yield*et((i=this.process)==null?void 0:i.stdout),await it((r=this.process)==null?void 0:r.stderr)}async blame(t){let i=new Map,r=await(0,ut.realpath)(t);try{for await(let o of this.run(r))i.set(o.line.result,o)}catch(o){s.error(o),this.dispose()}if(!this.killed)return(0,ft.relative)(t,r)?s.write("info",`Blamed "${r}" (resolved via symlink from "${t}")`):s.write("info",`Blamed "${r}"`),i}};var P=class{constructor(){this.files=new Map;this.fsWatchers=new Map}async file(t){return this.get(t)}async getLine(t,i){let r=i+1,o=await this.get(t);return o==null?void 0:o.get(r)}removeFromRepository(t){for(let[i]of this.files)i.startsWith(t)&&this.remove(i)}async remove(t){var i,r;(i=await this.files.get(t))==null||i.dispose(),(r=this.fsWatchers.get(t))==null||r.close(),this.files.delete(t),this.fsWatchers.delete(t)}dispose(){for(let[t]of this.files)this.remove(t)}async get(t){var i;if(!this.files.has(t)){let r=this.create(t);r.then(o=>{o&&this.fsWatchers.set(t,(0,I.watch)(t,()=>{this.remove(t)}))}),this.files.set(t,r)}return(i=await this.files.get(t))==null?void 0:i.store}async create(t){try{if(await I.promises.access(t),await lt(t))return new C(t)}catch{}s.write("info",`Will not blame '${t}'. Outside the current workspace.`)}};var bt=require("vscode"),wt=require("url");var gt=require("url"),ht=e=>{let t;try{t=new gt.URL(e)}catch{return!1}return t.href!==e||t.protocol!=="http:"&&t.protocol!=="https:"?!1:!!(t.hostname&&t.pathname)};var yt=require("url");var G=e=>e.replace(/\.git$/i,""),U=e=>G(e).replace(/^([a-z-]+:\/\/)?([\w%:\\]+?@)?/i,"").replace(/:([a-z_.~+%-][a-z0-9_.~+%-]+)\/?/i,"/$1/");var vt=e=>{var r;let t=(r=/^(https?):/.exec(e))==null?void 0:r[1],i;try{i=new yt.URL(`${t??"https"}://${U(e)}`)}catch{return}return i.port=t?i.port:"",i};var xt=e=>{var t;return((t=/([a-zA-Z0-9_~%+.-]*?)(\.git)?$/.exec(e))==null?void 0:t[1])??""};var N=require("vscode"),k=(e,t=[])=>Promise.resolve(N.window.showInformationMessage(e,...t)),v=(e,...t)=>Promise.resolve(N.window.showErrorMessage(e,...t));var z=(e,t,i="/")=>e.split(i).filter(o=>!!o)[Number(t)]||"invalid-index",Yt=({hostname:e})=>t=>t===""?e:z(e,t,"."),Xt=e=>{if(/^[a-z]+?@/.test(e)){let[,t]=b(e,":");return(i="")=>i===""?"/"+t:z(t,i)}try{let{pathname:t}=new wt.URL(e);return(i="")=>i===""?t:z(t,i)}catch{return()=>"no-remote-url"}},Zt=e=>(a("pluralWebPathSubstrings")??[]).some(t=>e.includes(t)),Jt=async e=>{let t=a("remoteName"),i=await mt(t);if(i===t)return;let r=U(await ct(t)),o=vt(r),n=await dt();return{hash:e.commit.hash,"tool.protocol":(o==null?void 0:o.protocol)??"https:","tool.commitpath":`/commit${Zt(r)?"s":""}/`,"project.name":xt(i),"project.remote":r,"gitorigin.hostname":o?Yt(o):"no-origin-url","gitorigin.path":Xt(G(i)),"gitorigin.port":o!=null&&o.port?`:${o.port}`:"","file.path":n,"file.path.result":n,"file.path.source":e.filename,"file.line":e.line.result.toString(),"file.line.result":e.line.result.toString(),"file.line.source":e.line.source.toString()}},E=async e=>{if(!e||u(e.commit))return;let t=await Jt(e);if(t===void 0)return;let i=h(a("commitUrl"),t);if(ht(i))return bt.Uri.parse(i,!0);v(`Malformed gitblame.commitUrl: '${i}' from '${a("commitUrl")}'`)};var Tt=require("fs"),f=require("path");var L=class{constructor(){this.heads=new Map;this.filesWithFoundHeads=new Set;this.callback=()=>{}}onChange(t){this.callback=t}async addFile(t){if(this.filesWithFoundHeads.has(t))return;this.filesWithFoundHeads.add(t);let i=await W(t),r=this.normalizeWindowsDriveLetter((0,f.resolve)((0,f.dirname)(t),i));if(this.heads.has(r)===!0||i==="")return;let n=(0,f.resolve)(r,"..");this.heads.set(r,(0,Tt.watch)((0,f.join)(r,"HEAD"),{persistent:!1},()=>this.callback({gitRoot:r,repositoryRoot:n})))}dispose(){for(let[,t]of this.heads)t.close();this.callback=()=>{}}normalizeWindowsDriveLetter(t){return t[0].toLowerCase()+t.substr(1)}};var A=class{constructor(){this.blame=new P,this.view=new T,this.headWatcher=new L,this.disposable=this.setupListeners(),this.updateView()}async blameLink(){let t=await E(await this.commit(!0));t?m.commands.executeCommand("vscode.open",t):v("Empty gitblame.commitUrl")}async showMessage(){var n;let t=await this.commit();if(!t||u(t.commit)){this.view.clear();return}let i=h(a("infoMessageFormat"),w(t.commit)),r=await E(t),o=r?[{title:"View",action(){m.commands.executeCommand("vscode.open",r)}}]:void 0;this.view.set(t.commit,l()),(n=await k(i,o))==null||n.action()}async copyHash(){let t=await this.commit(!0);t&&!u(t.commit)&&(await m.env.clipboard.writeText(t.commit.hash),k("Copied hash"))}async copyToolUrl(){let t=await this.commit(!0),i=await E(t);i?(await m.env.clipboard.writeText(i.toString()),k("Copied tool URL")):v("gitblame.commitUrl config empty")}dispose(){this.view.dispose(),this.disposable.dispose(),this.blame.dispose(),this.headWatcher.dispose()}setupListeners(){let t=i=>{let{scheme:r}=i.document.uri;(r==="file"||r==="untitled")&&this.updateView(i)};return this.headWatcher.onChange(({repositoryRoot:i})=>{this.blame.removeFromRepository(i)}),m.Disposable.from(m.window.onDidChangeActiveTextEditor(i=>{p(i)?(this.view.activity(),this.blame.file(i.document.fileName),t(i)):this.view.clear()}),m.window.onDidChangeTextEditorSelection(({textEditor:i})=>{t(i)}),m.workspace.onDidSaveTextDocument(()=>{this.updateView()}),m.workspace.onDidCloseTextDocument(i=>{this.blame.remove(i.fileName)}))}async updateView(t=l()){if(!p(t)){this.view.clear();return}this.view.activity(),this.headWatcher.addFile(t.document.fileName);let i=R(t),r=await this.blame.getLine(t.document.fileName,t.selection.active.line),o=R(t);(i===o||o===O)&&this.view.set(r==null?void 0:r.commit,t)}async commit(t=!1){let i=()=>v("Unable to blame current line"),r=l();if(!p(r)){i();return}t||this.view.activity(),this.headWatcher.addFile(r.document.fileName);let o=await this.blame.getLine(r.document.fileName,r.selection.active.line);return o||i(),o}};var F=(e,t)=>Ct.commands.registerCommand(`gitblame.${e}`,t),Qt=e=>{let t=new A;e.subscriptions.push(t,s.getInstance(),F("quickInfo",()=>{t.showMessage()}),F("online",()=>{t.blameLink()}),F("addCommitHashToClipboard",()=>{t.copyHash()}),F("addToolUrlToClipboard",()=>{t.copyToolUrl()}))};
